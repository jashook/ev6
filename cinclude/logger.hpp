////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Module:        logger
//
// Version:       1.0
//
// Modifications: 
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#ifndef  __LOGGER_HPP__
#define __LOGGER_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <fstream>

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

namespace ev4 {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

class logger
{
   private: // member variables

      std::ofstream _m_output_stream;

   public:   // member functions

      void endl() { _endl(); }

   public:   // member operators

      template <typename __Type> void operator<<(__Type& _Input) { _m_output_stream << _Input; }

   public:   // constructor | destructor

      logger() { ctor(); }

      ~logger() { dtor(); }

   private:   // helper functions

      void ctor()
      {
         _m_output_stream.open("logger.txt");
      }

      void dtor()
      {
         _m_output_stream.close();
      }

      void _endl() { _m_output_stream << std::endl; }

};   // end of class logger

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

}   // end namespace(ev4)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#endif   // __LOGGER_HPP__