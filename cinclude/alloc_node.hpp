////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
// Module:        alloc_node
//
// Version:       1.0
//
// Modifications: 
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#ifndef  __ALLOC_NODE_HPP__
#define __ALLOC_NODE_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include "node.hpp"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

namespace ev4 {
namespace alloc {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

template<typename __Type> class alloc_node
{
public:   // member variables

      std::size_t m_index;
      alloc_node<__Type>* _m_next;
      alloc_node<__Type>* _m_prev;
      __Type  _m_data;

   public:   // contructor | destructor

      alloc_node() : _m_next(0), m_index(0), _m_prev(0) { }

      ~alloc_node() { }

   public:   // member functions

      void realloc(__Type& _Data, alloc_node* _Next, alloc_node* _Prev)
      {
         _m_next = _Next;
         _m_prev = _Prev;
         _m_data = _Data;
      }

};

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

}   // end namespace(ev4)
}   // end namespace(alloc)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#endif   // __ALLOC_NODE_HPP__